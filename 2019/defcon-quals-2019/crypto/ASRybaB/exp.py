__author__ = "polaris"
from pwn import *
from pow import solve_pow
ppp = [35184372088891, 35184372088907, 35184372088961, 35184372088967, 35184372088979, 35184372088997, 35184372089011, 35184372089047, 35184372089107, 35184372089117, 35184372089143, 35184372089147, 35184372089239, 35184372089249, 35184372089257, 35184372089309, 35184372089323, 35184372089341, 35184372089353, 35184372089357, 35184372089371, 35184372089413, 35184372089443, 35184372089491, 35184372089509, 35184372089539, 35184372089551, 35184372089653, 35184372089687, 35184372089719, 35184372089731, 35184372089747, 35184372089791, 35184372089827, 35184372089833, 35184372089843, 35184372089849, 35184372089863, 35184372089887, 35184372089903, 35184372089917, 35184372090013, 35184372090031, 35184372090037, 35184372090061, 35184372090107, 35184372090139, 35184372090191, 35184372090199, 35184372090209, 35184372090229, 35184372090367, 35184372090379, 35184372090419, 35184372090433, 35184372090457, 35184372090499, 35184372090523, 35184372090529, 35184372090541, 35184372090557, 35184372090631, 35184372090649, 35184372090677, 35184372090689, 35184372090713, 35184372090821, 35184372090839, 35184372090863, 35184372090871, 35184372090953, 35184372090971, 35184372091091, 35184372091109, 35184372091159, 35184372091241, 35184372091273, 35184372091343, 35184372091397, 35184372091399, 35184372091483, 35184372091529, 35184372091579, 35184372091601, 35184372091637, 35184372091663, 35184372091667, 35184372091669, 35184372091679, 35184372091801, 35184372091819, 35184372091837, 35184372091871, 35184372091879, 35184372091903, 35184372091933, 35184372091951, 35184372092003, 35184372092017, 35184372092029, 35184372092083, 35184372092087, 35184372092209, 35184372092213, 35184372092231, 35184372092267, 35184372092297, 35184372092321, 35184372092339, 35184372092341, 35184372092377, 35184372092383, 35184372092453, 35184372092473, 35184372092561, 35184372092587, 35184372092641, 35184372092647, 35184372092689, 35184372092729, 35184372092743, 35184372092843, 35184372092851, 35184372092879, 35184372092917]

#context.log_level = "debug"
p1 = remote("asrybab.quals2019.oooverflow.io",1280)
p1.recvuntil("Challenge: ")
chall = p1.recvline().strip()
p1.recvuntil("n: ")
n = int(p1.recvline().strip())
p1.recvline()
pow1 = solve_pow(chall,n)
print pow1

p1.sendline(str(pow1))

def get_challenge(p):
    p.sendline()
    p.sendline("1")
    p.recvuntil("2) solve challenges\n")
    n = []
    e = []
    v = []
    for i in range(3):
        n.append(int(p.recvline().strip()))
        e.append(int(p.recvline().strip()))
        v.append(int(p.recvline().strip()))
    ctime = int(p.recvline().strip())
    digest = p.recvline().strip()
    return (n,e,v,ctime,digest)

(n,e,v,ctime,digest) = get_challenge(p1)
print n,e,v,ctime,digest
p1.close()

d = []
e2 = []
#n = [19790623529481812978269169116945625827419083146138061933935226440622049763388584748304706675455600845759336143042472220410762692802064655720156121705948534629904704878849397972774126760184844389539712524120043739649781684612744435975757930755668129452494454913411915028576915382972372777928860238588486119662632907684944147109548135450152709628807045392392319843369605015423615390765849]*3
#e = [2879870184012867247259627609469643776918470132370392970791129830257505442615927290337193800497780561842551382390007491118339041428643648429696908216990135000572729716877573826182943235616227547802808861540949915936069670078760735259011722063114407530500888701394979964735724168418840789990341120988424009185139408717291125324915941636480041494357706237174575497692298961507598558133189]*3

import os
def multisolve(n,e,filename,ppp1,ppp2,ppp3,ppp4,ppp5):
    os.system("sage boneh_durfee.sage "+str(n)+" "+str(e*ppp1)+" 8 "+filename)
    os.system("sage boneh_durfee.sage "+str(n)+" "+str(e*ppp2)+" 8 "+filename)
    os.system("sage boneh_durfee.sage "+str(n)+" "+str(e*ppp3)+" 8 "+filename)
    os.system("sage boneh_durfee.sage "+str(n)+" "+str(e*ppp4)+" 8 "+filename)
    os.system("sage boneh_durfee.sage "+str(n)+" "+str(e*ppp5)+" 8 "+filename)

from multiprocessing import Process
import time
start = time.time()

for ddd in range(3):
    p = []
    for i in range(25):
        tmp = Process(target=multisolve, args=(n[ddd],e[ddd],"d%d"%ddd,ppp[5*i],ppp[5*i+1],ppp[5*i+2],ppp[5*i+3],ppp[5*i+4]))
        tmp.start()
        p.append(tmp)

    time.sleep(60)
    while True:
        time.sleep(1)
        try:
            with open("d%d"%ddd,"rb") as f:
                d.append(int(f.readline().strip()))
                e2.append(int(f.readline().strip()))
                break
        except:
            pass
    for ps in p:
        ps.terminate()

print time.time()-start
print d
print e2

sol = [0,0,0]
for i in range(3):
    sol[i] = pow(v[i],d[i]*(e2[i]/e[i]),n[i])

print "next"
context.log_level = "debug"
p2 = remote("asrybab.quals2019.oooverflow.io",1280)
p2.recvuntil("Challenge: ")
chall = p2.recvline().strip()
p2.recvuntil("n: ")
nn = int(p2.recvline().strip())
p2.recvline()
pow2 = solve_pow(chall,nn)
print pow2
p2.sendline(str(pow2))
p2.sendline()
p2.recvuntil("2) solve challenges\n")
p2.sendline("2")

for i in range(3):
    p2.sendline(str(sol[i]))
for i in range(3):
    p2.sendline(str(n[i]))
    p2.sendline(str(e[i]))
    p2.sendline(str(v[i]))
p2.sendline(str(ctime))
p2.sendline(digest)
p2.interactive()
